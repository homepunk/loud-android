apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]

        applicationId globalConfiguration["androidApplicationId"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
        testApplicationId globalConfiguration["testApplicationId"]
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            multiDexEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

kapt {
    generateStubs = true
}


dependencies {
    def presentationDependencies = rootProject.ext.presentationXDependencies

    implementation project(path: ':core')
    implementation project(path: ':data')

    // Dagger 2
    kapt presentationDependencies.daggerCompiler
    // Dagger Android
    implementation presentationDependencies.daggerAndroid
    implementation presentationDependencies.daggerSupport // if you use the support libraries
    kapt presentationDependencies.daggerProcessor

    // ViewModel & LiveData
    implementation presentationDependencies.lifecycleExtensions

    // Rx Permissions
    implementation presentationDependencies.rxPermission

    // Native UI
    implementation presentationDependencies.design
    implementation presentationDependencies.appCompat

    implementation presentationDependencies.cardView
    implementation presentationDependencies.gridLayout
    implementation presentationDependencies.recyclerView
    implementation presentationDependencies.constraintLayout

    // 3d party UI
    implementation presentationDependencies.circularImageView
    implementation presentationDependencies.navigationTabStrip
}
